{"ast":null,"code":"var _jsxFileName = \"/Users/theorder/Desktop/covid stuff 349/COVID web app/src/components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../API';\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const [fetchedCountires, setFetchedCountires] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountires(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountires]);\n  console.log(fetchedCountires);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => handleCountryChange(e.target.value),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Global\"), fetchedCountires.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 42\n    }\n  }, country))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/theorder/Desktop/covid stuff 349/COVID web app/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","handleCountryChange","fetchedCountires","setFetchedCountires","fetchAPI","console","log","formControl","e","target","value","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2B;AACjD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,QAAQ,GAAG,YAAW;AACxBD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACH,KAFD;;AAGAK,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACD,mBAAD,CALM,CAAT;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACI,sBACI,oBAAC,WAAD;AAAc,IAAA,SAAS,EAAEJ,MAAM,CAACS,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAIC,CAAD,IAAOP,mBAAmB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnE;AAAsF,IAAA,OAAO,EAAC,QAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEHR,gBAAgB,CAACS,GAAjB,CAAqB,CAACC,OAAD,EAASC,CAAT,kBAAe;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,OAAjC,CAApC,CAFG,CADA,CADJ;AAQH,CAlBD;;AAmBA,eAAeZ,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../API';\nconst CountryPicker = ({handleCountryChange}) => {\nconst [fetchedCountires, setFetchedCountires] = useState([]);\n\nuseEffect(()=>{\n    const fetchAPI = async () =>{\n        setFetchedCountires(await fetchCountries());\n    }\n    fetchAPI();\n}, [setFetchedCountires])\nconsole.log(fetchedCountires);\n    return (\n        <FormControl  className={styles.formControl}>    \n        <NativeSelect defaultValue=\"\" onChange ={(e) => handleCountryChange(e.target.value)}  variant=\"filled\">\n            <option value=\"\">Global</option>\n    {fetchedCountires.map((country,i) => <option key={i} value={country}>{country}</option>)}\n        </NativeSelect>\n        </FormControl >\n    )\n}\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}