{"ast":null,"code":"var _jsxFileName = \"/Users/theorder/Desktop/covid stuff 349/COVID web app/src/components/Charts/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport { Container } from '@material-ui/core';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  //this is a set representation with setter method of a state\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    options: {\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: false\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }) : null;\n  const BarChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, country ? BarChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/theorder/Desktop/covid stuff 349/COVID web app/src/components/Charts/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Container","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","scales","xAxes","gridLines","display","yAxes","BarChart","value","legend","title","text","container"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css'\nimport { Container } from '@material-ui/core';\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n    //this is a set representation with setter method of a state\n    const [dailyData, setDailyData] = useState([]);\n    \n    useEffect(() => {\n    const fetchAPI = async()=>{\n        setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    },[]);\n\nconst lineChart =(\n    dailyData.length ? ( \n        <Line data={{\n                        labels: dailyData.map(({date}) =>  date),\n                        datasets :[{\n                            data :  dailyData.map(({confirmed}) =>  confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        },\n                        {\n                            data :  dailyData.map(({deaths}) =>  deaths),\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                            fill: true,\n                        }]\n                    }}\n                    options={ {\n                        scales : { xAxes : [ { gridLines : { display : false } } ], yAxes : [ { gridLines : { display : false } } ] }\n                    } }\n                    />):null\n                    );\n\nconst BarChart  =(\n       confirmed?(\n        <Bar\n        data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets:[{\n                label:'People',\n                backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)' ],\n                data:[confirmed.value, recovered.value, deaths.value]\n            }]\n        }}\n        options={{\n            legend:{display:false},\n            title: {display:true, text:`current state in ${country}`}\n        }}\n        />           \n        ): null\n    )\n    return (\n     <div className={styles.container}>\n         {country? BarChart : lineChart}\n     </div>\n    )\n}\nexport default Chart;"]},"metadata":{},"sourceType":"module"}