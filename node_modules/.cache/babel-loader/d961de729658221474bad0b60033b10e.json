{"ast":null,"code":"var _jsxFileName = \"/Users/theorder/Desktop/covid stuff 349/COVID web app/src/components/LineGraph.comp.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from \"numeral\"; //option dictionary style for Line option of react-chartjs-2\n\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    points: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n}; //Displays a line-graph of cases from continuous data-set of last 160 days\n\nfunction LineGraph({\n  casesType = \"cases\",\n  ...props\n}) {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    ;\n    return chartData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=160\").then(response => response.json()).then(data => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, data && data.length > 0 && /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204,16,52,0.7)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/theorder/Desktop/covid stuff 349/COVID web app/src/components/LineGraph.comp.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","points","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","props","setData","buildChartData","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","response","json","className","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport {Line} from 'react-chartjs-2';\nimport numeral from \"numeral\";\n\n//option dictionary style for Line option of react-chartjs-2\nconst options = {\n    legend:{\n        display:false,\n    },\n    elements:{\n        points:{\n            radius:0,\n        },\n    },\n    maintainAspectRatio:false,\n    tooltips:{\n        mode:\"index\",\n        intersect:false,\n        callbacks:{\n            label:function(tooltipItem,data){\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n        },\n    },\n    scales:{\n        xAxes:[{\n            type: \"time\",\n            time:{\n                format:\"MM/DD/YY\",\n                tooltipFormat: \"ll\",\n            },\n        },],\n        yAxes: [\n            {\n                gridLines:{\n                    display:false,\n                },\n                ticks:{\n                    callback: function(value, index, values){\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            }\n        ],\n    },\n}\n\n//Displays a line-graph of cases from continuous data-set of last 160 days\nfunction LineGraph({casesType = \"cases\",...props}) {\n    const [data,setData] = useState({});\n\n\n    const buildChartData = (data,casesType=\"cases\") => {\n        const chartData = [];\n        let lastDataPoint;\n        for(let date in data.cases){\n            if(lastDataPoint){\n                const newDataPoint = {\n                    x:date, \n                    y:data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint);\n            }\n            lastDataPoint = data[casesType][date];\n        };\n        return chartData;\n    }\n\n    useEffect(() => {\n        const fetchData = async()=>{\n            await  fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=160\")\n            .then(response => response.json())\n            .then(data => {\n                let chartData = buildChartData(data, casesType);\n                setData(chartData);\n            });\n        };\n        fetchData();\n    }, [casesType])\n\n    return (\n        <div className={props.className}>\n            {data && data.length >0 && (\n                <Line data={{\n                datasets:[{\n                    backgroundColor: \"rgba(204,16,52,0.7)\",\n                    borderColor: \"#CC1034\",\n                    data:data,\n                }]\n                }} \n            options={ options} />\n            )}\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}